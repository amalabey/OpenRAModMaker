<Window x:Class="OpenRA.ModMaker.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:OpenRA.ModMaker.UI"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
        md:DialogServiceViews.IsRegistered="True"
        mc:Ignorable="d"        
        Title="OpenRA Mod Editor" 
        Height="1000" Width="1500"
        WindowStartupLocation="CenterScreen"
        >
    <Window.Resources>
        <Style x:Key="LinkButton"
        TargetType="Button">
            <Setter
            Property="Template">
                <Setter.Value>
                    <ControlTemplate
                    TargetType="Button">
                        <TextBlock
                        TextDecorations="Underline">
                    <ContentPresenter /></TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter
            Property="Foreground"
            Value="Blue" />
            <Style.Triggers>
                <Trigger
                Property="IsMouseOver"
                Value="true">
                    <Setter
                    Property="Foreground"
                    Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="8*"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Menu DockPanel.Dock="Top" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Background="{x:Null}">
            <MenuItem Header="_File">
                <MenuItem Header="Open" Command="{Binding OpenCommand}"/>
                <MenuItem Header="Save" Command="{Binding Path=Manifest.SaveCommand}" />
                <Separator />
                <MenuItem Header="_Exit" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Command="Cut" />
                <MenuItem Command="Copy" />
                <MenuItem Command="Paste" />
            </MenuItem>
        </Menu>

        <ToolBarTray Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Background="{x:Null}">
            <ToolBar Background="{x:Null}" 
                     VerticalContentAlignment="Center"
                     HorizontalAlignment="Stretch" Margin="0,0,0,-0.333" Width="Auto">
                <Button Command="{Binding OpenCommand}" ToolTip="Open Manifest." Height="25" Width="25" Margin="5,0,0,0">
                    <Image Source="/Images/open.png" />
                </Button>
                <Button Command="{Binding Path=Manifest.SaveCommand}" ToolTip="Save Manifest." Height="25" Width="25" Margin="5,0,5,0">
                    <Image Source="/Images/save.png" />
                </Button>
                <Separator Margin="5,0,5,0" />
                <StackPanel Orientation="Horizontal">
                    <Label Margin="5,0,0,0">Find:</Label>
                    <TextBox Margin="5,0,5,0" Width="150" Text="{Binding FindKeyword}" VerticalContentAlignment="Center"/>
                    <Button Command="{Binding FindPreviousCommand}" 
                            ToolTip="Previous" Height="20" Width="20" Margin="2,0,5,0" Background="{x:Null}" BorderBrush="{x:Null}">
                        <Image Source="/Images/chev-left.png" />
                    </Button>
                    <Button Command="{Binding FindNextCommand}"
                            ToolTip="Next" Height="20" Width="20" Margin="0,0,2,0" BorderBrush="{x:Null}" Background="{x:Null}">
                        <Image Source="/Images/chev-right.png" />
                    </Button>
                </StackPanel>
            </ToolBar>
        </ToolBarTray>

        <GroupBox Header="Manifest" VerticalAlignment="Stretch" Grid.Row="2" Grid.Column="0" Margin="10,10,10,10">
            <TreeView VerticalAlignment="Stretch" 
                      TreeViewItem.Expanded="ModDefinitionTreeView_Expanded"
                  x:Name="ModDefinitionTreeView" ItemsSource="{Binding Path=Manifest.Children}" BorderBrush="{x:Null}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding Path=Manifest.SelectCommand}" CommandParameter="{Binding ElementName=ModDefinitionTreeView, Path=SelectedItem}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal">
                            <Image MaxHeight="20" MaxWidth="20" Margin="3" Visibility="{Binding Icon, Converter={x:Static local:NotNullToVisibilityConverter.Instance}}" Source="{Binding Path=Icon.ImageSource}" />
                            <Image Width="20" Margin="3" Visibility="{Binding Icon, Converter={x:Static local:NullToVisibilityConverter.Instance}}" Source="{Binding IconUrl, Converter={x:Static local:NodeToImageConverter.Instance}}" />
                            <TextBlock VerticalAlignment="Center" Text="{Binding Name}">
                                <TextBlock.ContextMenu>
                                    <ContextMenu ItemsSource="{Binding Path=ContextActions}">
                                        <ContextMenu.ItemTemplate>
                                            <DataTemplate>
                                                <MenuItem Header="{Binding Name}" Command="{Binding Command}"/>
                                            </DataTemplate>
                                        </ContextMenu.ItemTemplate>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                            <Button Visibility="{Binding Linked}" 
                                    Style="{StaticResource LinkButton}" 
                                    Command="{Binding LinkCommand}"
                                    Content="{Binding Value}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </GroupBox>

        <GroupBox Header="Properties" Grid.Row="2" Grid.Column="1" Margin="0,10,10,10">
            <ScrollViewer  VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical">
                    <Image MaxHeight="300" MaxWidth="300" Margin="3" Visibility="{Binding Path=Navigator.SelectedNode.Icon, Converter={x:Static local:NotNullToVisibilityConverter.Instance}}" Source="{Binding Path=Navigator.SelectedNode.Icon.ImageSource}" />
                    <DataGrid x:Name="PropertiesDataGrid" HeadersVisibility="Column"
                          BorderThickness="1,0,0,0"
                          HorizontalGridLinesBrush="LightGray"
                          VerticalGridLinesBrush="LightGray"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding Path=Navigator.SelectedNode.Properties}" BorderBrush="LightGray" Background="{x:Null}">
                        <DataGrid.Resources>
                            <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
                                <Style.Setters>
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="FontWeight" Value="DemiBold" />
                                </Style.Setters>
                            </Style>
                            <Style x:Key="NameColumnStyle" TargetType="{x:Type DataGridCell}">
                                <Style.Setters>
                                    <!--<Setter Property="Background" Value="LightGray"/>-->
                                    <Setter Property="FontWeight" Value="DemiBold" />
                                    <Setter Property="BorderThickness" Value="1,0,0,0"></Setter>
                                </Style.Setters>
                            </Style>
                            <DataTemplate x:Key="CustomCellDisplayTemplate" >
                                <TextBlock Text="{Binding Value}"/>
                            </DataTemplate>
                            <DataTemplate x:Key="CustomCellEditingTemplate" >
                                <StackPanel Orientation="Horizontal">
                                    <TextBox Text="{Binding Value}" HorizontalAlignment="Stretch"/>
                                    <TextBlock>...</TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="*" Header="Name" Binding="{Binding Name}" 
                                CellStyle="{StaticResource NameColumnStyle}"
                                HeaderStyle="{StaticResource ColumnHeaderStyle}"
                                CanUserReorder="False" CanUserResize="False" Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                            <!--<DataGridTextColumn Width="225" Header="Value" Binding="{Binding Value}"  />-->
                            <DataGridTemplateColumn Width="*" Header="Value" CellTemplate="{StaticResource CustomCellDisplayTemplate}" 
                                HeaderStyle="{StaticResource ColumnHeaderStyle}"
                                CellEditingTemplate="{StaticResource CustomCellEditingTemplate}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </ScrollViewer>
        </GroupBox>
    </Grid>
</Window>
